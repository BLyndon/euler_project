/*
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

package main

import (
	"fmt"
	"time"
)

func main() {
	start := time.Now()

	fmt.Println("")
	fmt.Println("Problem 2: Even Fibunacci numbers")
	fmt.Println("")

	f_ := 0
	f1 := 1
	f2 := 2

	fmax := 4000000
	sum := 0

	fmt.Println("Max value:", fmax)

	for f2 < fmax {
		if f2%2 == 0 {
			sum += f2
		}

		f_ = f1
		f1 = f2
		f2 = f_ + f2
	}

	fmt.Println("The sum of the even-valued terms:", sum)

	elapsed := time.Since(start)
	fmt.Println("Execution time", elapsed)
	fmt.Println("")
}
